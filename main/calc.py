# -*- coding: utf-8 -*-
# @Author: Yinlong Su
# @Date:   2016-05-12 20:32:32
# @Last Modified by:   Yinlong Su
# @Last Modified time: 2016-05-12 22:39:08

import math
import pandas
from scipy.spatial.distance import squareform, pdist

codeColumnName = 'code'

attributeColumnName = [
    'additives_n',
    'energy_100g',
    'fat_100g',
    'carbohydrates_100g',
    'sugars_100g',
    'fiber_100g',
    'proteins_100g',
    'salt_100g',
    'sodium_100g',
    'alcohol_100g'
]

columnMax = [26.0, 4134.0, 101.0, 139.0, 105.0, 94.8, 86.0, 254.0, 100.0, 97.9]
groupMax = [0.134615384615, 0.505563618771, 0.392644978784, 0.440827338129, 0.447619047619, 0.105485232068, 0.360755813953, 0.0254198886115, 0.0254198886115, 0.408580183861]

matrix = [[0.010989010989, 0.262119013062, 0.0617821782178, 0.264244604317, 0.0947619047619, 0.0175808720113, 0.117790697674, 0.00089434, 0.00089434, 0.0689479060266], [0.00769230769231, 0.505563618771, 0.29702970297, 0.363309352518, 0.447619047619, 0.0907172995781, 0.0697674418605, 0.0001, 0.0001, 0.127681307457], [0.0734265734266, 0.22103289792, 0.0653465346535, 0.251676258993, 0.082, 0.0117352320675, 0.0285658914729, 0.00150735433071, 0.0015085, 0.0752042900919], [0.0222955678297, 0.247028554905, 0.109411078786, 0.214563538033, 0.150856920252, 0.0382475503016, 0.0773602957778, 0.00507547994918, 0.00507602277496, 0.127511065713], [0.0237906423473, 0.263161648866, 0.0995651592186, 0.264708341435, 0.12934888241, 0.0368087941372, 0.071209625323, 0.0254198886115, 0.0254198886115, 0.145166135913], [0.0725274725275, 0.276545845561, 0.140986502666, 0.222702555995, 0.143919699935, 0.0371790835095, 0.071799623803, 0.00386240387675, 0.00386223259414, 0.056366911243], [0.0345721694036, 0.313249953711, 0.123802631579, 0.319705124789, 0.21000952381, 0.0442510548523, 0.0748179275832, 0.0117076241354, 0.0117057322785, 0.0317784587448], [0.00854700854701, 0.214713352685, 0.115445544554, 0.172559095581, 0.110476190476, 0.0134493670886, 0.0958471760797, 0.0031240056243, 0.00312614285714, 0.0510725229826], [0.0710560625815, 0.254224846938, 0.105441486772, 0.223879256595, 0.174353510896, 0.0269960150023, 0.0636323293938, 0.00453442872658, 0.00453681106435, 0.0229826353422], [0.134615384615, 0.24544428318, 0.0660066006601, 0.143980815348, 0.00238095238095, 0.0, 0.360755813953, 0.00261783333333, 0.00261783333333, 0.0], [0.0461538461538, 0.365908724399, 0.131188118812, 0.316996402878, 0.012380952381, 0.105485232068, 0.0976744186047, 0.0122814444444, 0.0122814444444, 0.0612870275792], [0.0705128205128, 0.28027600387, 0.163366336634, 0.220683453237, 0.0535714285714, 0.0284810126582, 0.0232558139535, 0.00298106299213, 0.00298115, 0.408580183861], [0.0487179487179, 0.176453797775, 0.0794059405941, 0.153525179856, 0.180586080586, 0.0163502109705, 0.0434108527132, 0.0010570563295, 0.0010570563295, 0.0275791624106], [0.0612015721505, 0.302431806101, 0.163016541175, 0.215175442468, 0.165224089636, 0.033328145535, 0.0898280068483, 0.0050547620183, 0.00505440710862, 0.188908249715], [0.0160256410256, 0.440795839381, 0.182425742574, 0.440827338129, 0.305396825397, 0.0242616033755, 0.0476744186047, 0.00200793700787, 0.00200793700787, 0.0674157303371], [0.0742469886629, 0.260390716028, 0.128162942593, 0.200825141397, 0.120625348822, 0.0286088848096, 0.0879666149447, 0.00432050041318, 0.00430572628449, 0.0865666642654], [0.0690559440559, 0.219202336482, 0.0875702351485, 0.19769229862, 0.113893452381, 0.033373769339, 0.0877296988181, 0.00295729130435, 0.00295741266689, 0.0329060265577], [0.0299201235065, 0.264956523705, 0.138446278136, 0.187567508225, 0.124802836672, 0.0431630554724, 0.0990062490876, 0.00444414350877, 0.00444413557199, 0.0626326509392], [0.042735042735, 0.277147380921, 0.121242124212, 0.219744204636, 0.119307359307, 0.0279535864979, 0.0919896640827, 0.00223680028633, 0.00223680028633, 0.0682669390535], [0.0644171779141, 0.208607591077, 0.0828671617162, 0.183380690406, 0.124793965111, 0.0235713913632, 0.0742632401798, 0.00300614707841, 0.00300645629757, 0.144535240041], [0.0528846153846, 0.183584300919, 0.139851485149, 0.167176258993, 0.0821428571429, 0.0211075949367, 0.0341787790698, 0.00356852854331, 0.0035675, 0.00510725229826], [0.0207100591716, 0.38017053701, 0.235891089109, 0.228237410072, 0.0333333333333, 0.040611814346, 0.107122093023, 0.00169291338583, 0.00169291338583, 0.0723527408921], [0.0769230769231, 0.123671383648, 0.132920792079, 0.294604316547, 0.159047619048, 0.028129395218, 0.0982558139535, 0.0010175, 0.0010175, 0.0], [0.0274725274725, 0.437651185293, 0.392644978784, 0.243525179856, 0.1, 0.0240506329114, 0.0695348837209, 0.00337048931384, 0.00337034308211, 0.0247701736466], [0.0384615384615, 0.245202386712, 0.137293729373, 0.191846522782, 0.0119047619048, 0.0, 0.0286821705426, 0.00598333333333, 0.00598333333333, 0.0510725229826], [0.0353490440196, 0.295075089756, 0.120335714539, 0.278688063634, 0.144717573892, 0.0339078511151, 0.0861321467551, 0.00404135512152, 0.00404135503289, 0.115812053115], [0.0843195266272, 0.256037332688, 0.146410891089, 0.166786570743, 0.140973084886, 0.010864978903, 0.0802810077519, 0.00376128500358, 0.00376115615605, 0.061695607763], [0.0512820512821, 0.20198355104, 0.0871287128713, 0.187050359712, 0.0219047619048, 0.0158227848101, 0.0488372093023, 0.00472440944882, 0.00472440944882, 0.127681307457], [0.0594405594406, 0.122964038058, 0.0789702970297, 0.136594724221, 0.146603174603, 0.0285864978903, 0.0444186046512, 0.00112210781345, 0.00112210781345, 0.0255362614913], [0.129807692308, 0.310165027146, 0.136908690869, 0.289024780176, 0.236149659864, 0.0211849507736, 0.0621705426357, 0.00217377952756, 0.00217377952756, 0.0551583248212], [0.0604395604396, 0.316911250874, 0.125815020526, 0.321782238075, 0.216238548753, 0.0421010176222, 0.0815364086923, 0.00884602040816, 0.00884610075526, 0.0602655771195], [0.102335164835, 0.316224655847, 0.131071107111, 0.275186396337, 0.202995670996, 0.0514000767165, 0.0890697674419, 0.0038863722262, 0.00388636363636, 0.0635852911134], [0.0604395604396, 0.339703273666, 0.128382838284, 0.354436450839, 0.219365079365, 0.0154711673699, 0.0519379844961, 0.00220866141732, 0.00220866141732, 0.0531154239019], [0.0888773388773, 0.225303739811, 0.1207248272, 0.161653318854, 0.146691086691, 0.0212948312236, 0.0625713032032, 0.00597966224313, 0.00597969143461, 0.163432073544], [0.0703826630223, 0.277816295139, 0.124067071223, 0.24237036345, 0.138770876467, 0.027784126426, 0.0813664690682, 0.00559939716931, 0.00559931394181, 0.129894450119], [0.0680473372781, 0.368178620384, 0.136203185536, 0.40518705036, 0.211373433584, 0.0275015069319, 0.0848202959831, 0.0020526967629, 0.0020526967629, 0.023493360572], [0.00480769230769, 0.380745041122, 0.249257425743, 0.246803699897, 0.0263492063492, 0.00914205344585, 0.10761627907, 0.00323727034121, 0.00323727034121, 0.119305413687], [0.0935550935551, 0.259441521529, 0.148223822382, 0.21619945423, 0.123323809524, 0.0273558368495, 0.0535324779471, 0.00184275215598, 0.0018424671916, 0.0], [0.0384615384615, 0.146796599627, 0.0712541254125, 0.139928057554, 0.0516666666667, 0.0159071729958, 0.057015503876, 0.0117358923885, 0.0117356666667, 0.0510725229826], [0.00961538461538, 0.402999516207, 0.153465346535, 0.391366906475, 0.208, 0.0478199718706, 0.09, 0.00237322834646, 0.00237322834646, 0.050051072523], [0.0664335664336, 0.36176547207, 0.284935262757, 0.14216934145, 0.0737142857143, 0.0296317606444, 0.0813953488372, 0.00157538057743, 0.00157533333333, 0.0], [0.0769230769231, 0.369698435736, 0.13201320132, 0.388489208633, 0.047619047619, 0.0, 0.0852713178295, 0.00813333333333, 0.00813333333333, 0.0], [0.0357816864196, 0.244586617151, 0.13167699339, 0.178578080625, 0.0998133840682, 0.0397410255717, 0.0673547670206, 0.00420050225738, 0.00420051444445, 0.0533349880194], [0.00699300699301, 0.284373488147, 0.10004950495, 0.258561151079, 0.187669172932, 0.0817104836092, 0.0947093023256, 0.00199655615416, 0.00199655615416, 0.0494939177268], [0.0660910518053, 0.271851744784, 0.13218027624, 0.216721972422, 0.130146365915, 0.0253008168973, 0.0847822189922, 0.00435223717217, 0.00435215263389, 0.0167732917585], [0.0, 0.0563014029995, 0.0026402640264, 0.0410071942446, 0.0561904761905, 0.0, 0.0112403100775, 0.0003195, 0.0003195, 0.0], [0.026525198939, 0.185970004838, 0.0720010422095, 0.193658273381, 0.0795037593985, 0.0187161826756, 0.0817571059432, 0.0247714421881, 0.0247754736842, 0.0255362614913], [0.0863905325444, 0.383836690384, 0.236997467189, 0.317117396991, 0.275979949875, 0.0215393811533, 0.0729328165375, 0.00202199305655, 0.00202212727273, 0.0], [0.0484234234234, 0.271129919673, 0.139716786848, 0.202294213373, 0.159205551794, 0.0215701739702, 0.0821860465116, 0.0031679939316, 0.00317271480441, 0.126289204088], [0.0838695525007, 0.284540284815, 0.13503021367, 0.254619220194, 0.158148817038, 0.0316551965356, 0.0764869271474, 0.00586933321618, 0.00586705399872, 0.0746842223274]]

countryTag = ["Albania", "Andorra", "Argentina", "Australia", "Austria", "Belgium", "Brazil", "Cambodia", "Canada", "Chile", "China", "Cuba", "Czech Republic", "Denmark", "Finland", "France", "French Guiana", "Germany", "Greece", "Guadeloupe", "Hong Kong", "Hungary", "India", "Ireland", "Israel", "Italy", "Luxembourg", "Malta", "Martinique", "Morocco", "Netherlands", "New Zealand", "Norway", "Poland", "Portugal", "Romania", "Russia", "Saint Pierre and Miquelon", "Singapore", "Slovenia", "South Africa", "South Korea", "Spain", "Sweden", "Switzerland", "Taiwan", "Thailand", "Tunisia", "United Kingdom", "United States"]

def findCode(df, idx):
    q = df[df[codeColumnName].fillna('missing').str.contains(str(idx))]
    return q

def minDistance(nor):
    minK = 0
    minD = float('inf')

    for i in range(len(countryTag)):
        v = []
        v.append(matrix[i])
        v.append(nor)
        similarities = squareform(pdist(v, 'euclidean'))
        if similarities[0][1] < minD:
            minD = similarities[0][1]
            minK = i
    return countryTag[minK]

def cartCalc(df, cart):
    t = 0
    oriArray = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    norArray = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

    for idx in cart:
        q = findCode(df, idx)
        if len(q.index) != 1:
            print('  # cartCalc: Error on food id =', idx, ': found', len(q.index), 'items')
            continue
        t += 1
        for i in range(len(attributeColumnName)):
            a = q.iloc[0][attributeColumnName[i]]
            if not math.isnan(a):
                oriArray[i] += a
    if t > 0:
        for i in range(len(attributeColumnName)):
            oriArray[i] /= t
    for i in range(len(attributeColumnName)):
        norArray[i] = oriArray[i] / columnMax[i] / groupMax[i]

    minDist = minDistance(norArray)
    result = { 'ORI': oriArray, 'NOR': norArray, 'TYP': minDist }

    print('  # cartCalc:', oriArray, norArray, minDist, '(cart =', cart,')')
    return result